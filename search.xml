<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Music Post Example</title>
      <link href="/2019/02/10/Music%20Post%20Example/"/>
      <url>/2019/02/10/Music%20Post%20Example/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=1141568&auto=1&height=66"></iframe>]]></content>
      
      
      <categories>
          
          <category> music </category>
          
      </categories>
      
      
        <tags>
            
            <tag> music </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Image Post Example</title>
      <link href="/2019/01/23/Image%20Post%20Example/"/>
      <url>/2019/01/23/Image%20Post%20Example/</url>
      
        <content type="html"><![CDATA[<p><img src="https://images.unsplash.com/photo-1548125544-2d4cad80de29?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=crop&amp;w=1351&amp;q=80" alt=""><br><img src="https://images.unsplash.com/photo-1548097341-7cc6296be47b?ixlib=rb-1.2.1&amp;auto=format&amp;fit=crop&amp;w=1186&amp;q=80" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> image </category>
          
      </categories>
      
      
        <tags>
            
            <tag> image </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Video Post Example</title>
      <link href="/2019/01/19/Video%20Post%20Example/"/>
      <url>/2019/01/19/Video%20Post%20Example/</url>
      
        <content type="html"><![CDATA[<iframe src="//player.bilibili.com/player.html?aid=16088355&cid=26247653&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>]]></content>
      
      
      <categories>
          
          <category> video </category>
          
      </categories>
      
      
        <tags>
            
            <tag> video </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>XML 库选型指南</title>
      <link href="/2017/11/12/XML%E5%BA%93%E9%80%89%E5%9E%8B%E6%8C%87%E5%8D%97/"/>
      <url>/2017/11/12/XML%E5%BA%93%E9%80%89%E5%9E%8B%E6%8C%87%E5%8D%97/</url>
      
        <content type="html"><![CDATA[<p>最近项目中需要一个XML操作库，考察了目前的一些开源实现，本来想写篇文章比较下，但发现stackoverfloww上有个非常不错的总结。下面转载过来分享下：</p><a id="more"></a><p><a href="https://stackoverflow.com/questions/9387610/what-xml-parser-should-i-use-in-c/9387612#9387612" target="_blank" rel="external"><strong>What XML parser should I use in C++?</strong></a><br><img src="https://ws4.sinaimg.cn/large/006tKfTcgy1flfcno0e5qj30vn0xcgny.jpg" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> cpp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> xml </tag>
            
            <tag> cpp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微服务 - 服务发现</title>
      <link href="/2017/10/22/%E5%BE%AE%E6%9C%8D%E5%8A%A1%20-%20%E6%9C%8D%E5%8A%A1%E5%8F%91%E7%8E%B0/"/>
      <url>/2017/10/22/%E5%BE%AE%E6%9C%8D%E5%8A%A1%20-%20%E6%9C%8D%E5%8A%A1%E5%8F%91%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="1-什么是服务发现"><a href="#1-什么是服务发现" class="headerlink" title="1. 什么是服务发现"></a>1. 什么是服务发现</h2><p><strong>服务发现</strong> 指一个服务通过某种方式查找其他服务网络位置（如IP，端口号）等信息的过程。</p><h2 id="2-为什么需要服务发现"><a href="#2-为什么需要服务发现" class="headerlink" title="2. 为什么需要服务发现"></a>2. 为什么需要服务发现</h2><p>当一个服务与其他服务进行通信时，我们需要知道其他服务的网络位置(IP，端口号)信息。在传统的单体服务中，各个服务实例的网络位置是相对静态的，这样我们可以从偶尔更新的配置文件中读取各个服务的网络位置。<br>但在微服务架构中，由于扩缩容、故障、升级等原因，服务实例的网络位置是动态分配和动态变化的，使得通过更新配置文件的方式更新其他服务的网络位置信息不再适用。</p><a id="more"></a><h2 id="3-服务发现如何实现"><a href="#3-服务发现如何实现" class="headerlink" title="3. 服务发现如何实现"></a>3. 服务发现如何实现</h2><p><img src="https://ws2.sinaimg.cn/large/006tKfTcgy1fkqu7hte0kj30sg0t0q5m.jpg" alt=""><br>服务发现主要有两种实现方式：<code>客户端发现</code> 和 <code>服务端发现</code></p><h3 id="3-1-客户端发现"><a href="#3-1-客户端发现" class="headerlink" title="3.1 客户端发现"></a>3.1 客户端发现</h3><p>当使用客户端发现方式时，客户端需要负责确定服务实例的网络位置，并在同个服务的多个实例间进行负载均衡。<br><img src="https://ws4.sinaimg.cn/large/006tKfTcgy1fkqu8bn9elj30sg0qvq5q.jpg" alt=""></p><ul><li>优点：</li></ul><ol><li>相对比较简单，除了服务注册中心，无需其他组件;</li><li>可以针对不同服务实现不同的负载均衡逻辑</li></ol><ul><li>缺点：</li></ul><ol><li>客户端与服务注册中心耦合，须为客户端使用的每种编程语言和框架实现客户端服务发现逻辑。</li></ol><h3 id="3-2-服务端发现"><a href="#3-2-服务端发现" class="headerlink" title="3.2 服务端发现"></a>3.2 服务端发现</h3><p>当使用服务端发现方式时，客户端把请求发往负载均衡器，然后由负载均衡器去确定服务实例的网络位置，并透明地将转发请求。<br><img src="https://ws2.sinaimg.cn/large/006tKfTcgy1fkqu8paaekj30sg0hjjt5.jpg" alt=""></p><ul><li>优点：</li></ul><ol><li>把服务发现的细节从客户端抽象出来，客户端只需向负载均衡器发出请求，不用为客户端的每种编程语言或框架都实现服务发现逻辑。</li></ol><ul><li>缺点：</li></ul><ol><li>引入负载均衡组件，必须对它进行维护管理，保证其高可用。</li></ol><h2 id="4-服务注册"><a href="#4-服务注册" class="headerlink" title="4. 服务注册"></a>4. 服务注册</h2><p>在上述的架构图中，都存在 <code>Service Registry</code> 模块，这就是<strong>服务注册中心</strong>。</p><blockquote><p><strong>服务注册中心</strong> 是服务发现中的核心部分。可以简单理解为一个包含了各个服务实例的网络位置等信息的数据库。各个服务将服务实例的网络位置等信息存入服务注册中心的过程就是 <strong>服务注册</strong>。服务注册中必须是<strong>高可用</strong>的，要满足分布式系统CAP中的AP。</p></blockquote><p>服务发现也可以简单点说就是通过查询服务注册中心获得相应服务实例的网络位置。<br>服务注册主要也有两种实现方式：<code>自注册</code> 和 <code>第三方注册</code></p><h3 id="4-1-自注册"><a href="#4-1-自注册" class="headerlink" title="4.1 自注册"></a>4.1 自注册</h3><p>当使用自注册方式时，服务实例负责在服务注册中心注册和注销自己。此外，如果有必要，服务实例将通过发送心跳请求来防止其注册信息过期。<br><img src="https://ws1.sinaimg.cn/large/006tKfTcgy1fkqu96y2o3j30sg0otgmq.jpg" alt=""></p><h3 id="4-2-第三方注册"><a href="#4-2-第三方注册" class="headerlink" title="4.2 第三方注册"></a>4.2 第三方注册</h3><p>当使用第三方注册模式时，服务实例不再负责向服务注册中心注册自己，而是由被称为服务注册器（service registrar）的系统组件负责。服务注册器通过轮询部署环境或订阅事件来跟踪运行实例集的变更情况。当它检测到新的可用服务实例时，它会将该实例注册到服务注册中心；当检测到服务实例故障或终止时，它会注销服务实例。<br><img src="https://ws2.sinaimg.cn/large/006tKfTcgy1fkqu9mhvbwj30sg0gh0tl.jpg" alt=""></p><h2 id="5-K8S-Kubernetes-服务发现"><a href="#5-K8S-Kubernetes-服务发现" class="headerlink" title="5. K8S(Kubernetes)服务发现"></a>5. K8S(Kubernetes)服务发现</h2><p>K8S 使用DNS方式来实现服务发现。主要有两种部署模式：<code>kube2sky</code> 和 <code>kubeDNS</code>。</p><h3 id="5-1-kube2sky"><a href="#5-1-kube2sky" class="headerlink" title="5.1 kube2sky"></a>5.1 kube2sky</h3><p>k8s 1.3 前使用这种模式。该模式包括了三个组件：</p><ul><li><code>etcd</code>：kv存储，保存所有的 DNS 数据；</li><li><code>kube2sky</code>：通过 kubernetes API 监听 service 的变化，然后同步到 etcd；</li><li><code>skydns</code>：根据 etcd 中的数据，对外提供 DNS 查询服务。<br><img src="https://ws2.sinaimg.cn/large/006tKfTcgy1fkquc1s69oj30p00a174r.jpg" alt=""></li></ul><h3 id="5-2-kubeDNS"><a href="#5-2-kubeDNS" class="headerlink" title="5.2 kubeDNS"></a>5.2 kubeDNS</h3><p>该模式在 k8s 1.3 之后使用。在该模式主要有两个组件：</p><ul><li><code>kubeDNS</code>：替代了 kube2sky 中的 etcd+kube2sky+skydns，监听 service 变化，并把 service 相关信息保存在内存中，对外提供 DNS 查询服务；</li><li><code>dnsmasq</code>：轻量级的可以提供缓存功能的 DNS 服务组件。dnsmasq  在内存中预留一块区域（默认是 1G），保存当前最常用的 DNS 查询记录。当请求 DNS 解析时，如果缓存中没有要查找的记录，它再查询 kubeDNS，并把结果缓存起来。<br><img src="https://ws1.sinaimg.cn/large/006tKfTcgy1fkquci2r47j30p00a1jrr.jpg" alt=""></li></ul><h2 id="6-其他服务发现实现方式"><a href="#6-其他服务发现实现方式" class="headerlink" title="6. 其他服务发现实现方式"></a>6. 其他服务发现实现方式</h2><p>zookeeper vs consul vs Eureka</p>]]></content>
      
      
      <categories>
          
          <category> 微服务 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微服务 </tag>
            
            <tag> 服务发现 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DNS 相关配置与工具</title>
      <link href="/2017/10/14/DNS%20%E7%9B%B8%E5%85%B3%E9%85%8D%E7%BD%AE%E4%B8%8E%E5%B7%A5%E5%85%B7/"/>
      <url>/2017/10/14/DNS%20%E7%9B%B8%E5%85%B3%E9%85%8D%E7%BD%AE%E4%B8%8E%E5%B7%A5%E5%85%B7/</url>
      
        <content type="html"><![CDATA[<h2 id="1-配置文件"><a href="#1-配置文件" class="headerlink" title="1. 配置文件"></a>1. 配置文件</h2><p>linux 系统中和 DNS 相关的配置文件主要有两个：</p><h3 id="1-1-etc-hosts-设置-hostname-对应的-IP-地址"><a href="#1-1-etc-hosts-设置-hostname-对应的-IP-地址" class="headerlink" title="1.1 /etc/hosts: 设置 hostname 对应的 IP 地址"></a>1.1 <code>/etc/hosts</code>: 设置 hostname 对应的 IP 地址</h3><figure class="highlight python"><table><tr><td class="code"><pre><div class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> localhost</div><div class="line"><span class="number">10.18</span><span class="number">.132</span><span class="number">.13</span> juputer.ied.com</div></pre></td></tr></table></figure><h3 id="1-2-etc-resolv-conf-设置-DNS-服务器地址，以及解析规则等"><a href="#1-2-etc-resolv-conf-设置-DNS-服务器地址，以及解析规则等" class="headerlink" title="1.2 /etc/resolv.conf: 设置 DNS 服务器地址，以及解析规则等"></a>1.2 <code>/etc/resolv.conf</code>: 设置 DNS 服务器地址，以及解析规则等</h3><figure class="highlight python"><table><tr><td class="code"><pre><div class="line">search lol.qq.com qq.com com</div><div class="line">nameserver <span class="number">8.8</span><span class="number">.8</span><span class="number">.8</span></div><div class="line">options timeout: <span class="number">1</span></div><div class="line">options ndots: <span class="number">3</span></div></pre></td></tr></table></figure><a id="more"></a><p><code>search</code>选项 和 <code>options ndots</code> 选项配合指示是否要在用户传入的域名后添加后缀，具体规则如下：</p><ol><li>如果用户传入的域名是<code>绝对域名</code>，即域名以<code>.</code>结尾（如上<code>www.baidu.</code>），则查询的仅是该域名。</li><li>如果传入的是<code>相对域名</code>，且该域名中包含的<code>.</code>的数目大于或等于<code>option ndots:${n}</code>命令指定的数，则查询的仅是该域名。</li><li>如果传入的是<code>相对域名</code>，且传入的域名包含的<code>.</code>的数目少于<code>option ndots:${n}</code>命令指定的数，则解析时会依次往传入的域名后追加<code>search</code>列表中的后缀，直到解析出ip地址，或者解析完列表中所有后缀才会停止。</li></ol><h2 id="2-命令工具"><a href="#2-命令工具" class="headerlink" title="2. 命令工具"></a>2. 命令工具</h2><p>和 DNS 相关的命令主要有四个： <code>nslookup</code>, <code>host</code>, <code>dig</code>,<code>nscd</code>。</p><h3 id="2-1-nslookup-解析域名IP地址"><a href="#2-1-nslookup-解析域名IP地址" class="headerlink" title="2.1 nslookup: 解析域名IP地址"></a>2.1 nslookup: 解析域名IP地址</h3><figure class="highlight bash"><table><tr><td class="code"><pre><div class="line">➜  ~ nslookup wallez.cn [10.20.250.17]</div><div class="line">Server:     10.20.250.17</div><div class="line">Address:    10.20.250.17<span class="comment">#53</span></div><div class="line"></div><div class="line">Non-authoritative answer:</div><div class="line">wallez.cn   canonical name = walle.github.io.</div><div class="line">walle.github.io canonical name = sni.github.map.fastly.net.</div><div class="line">Name:   sni.github.map.fastly.net</div><div class="line">Address: 151.101.25.147</div></pre></td></tr></table></figure><h3 id="2-2-host-查看域名主机信息"><a href="#2-2-host-查看域名主机信息" class="headerlink" title="2.2 host: 查看域名主机信息"></a>2.2 host: 查看域名主机信息</h3><figure class="highlight bash"><table><tr><td class="code"><pre><div class="line">➜  ~ host [<span class="_">-a</span>] wallez.cn</div><div class="line">wallez.cn is an <span class="built_in">alias</span> <span class="keyword">for</span> walle.github.io.</div><div class="line">walle.github.io is an <span class="built_in">alias</span> <span class="keyword">for</span> sni.github.map.fastly.net.</div><div class="line">sni.github.map.fastly.net has address 151.101.25.147</div><div class="line">sni.github.map.fastly.net has IPv6 address 2a04:4e42:11::403</div></pre></td></tr></table></figure><h3 id="2-3-dig-跟踪域名解析过程"><a href="#2-3-dig-跟踪域名解析过程" class="headerlink" title="2.3 dig: 跟踪域名解析过程"></a>2.3 dig: 跟踪域名解析过程</h3><figure class="highlight bash"><table><tr><td class="code"><pre><div class="line">➜  ~ dig [+trace] wallez.cn</div><div class="line"></div><div class="line">; &lt;&lt;&gt;&gt; DiG 9.9.7-P3 &lt;&lt;&gt;&gt; wallez.cn</div><div class="line">;; global options: +cmd</div><div class="line">;; Got answer:</div><div class="line">;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 46034</div><div class="line">;; flags: qr rd ra; QUERY: 1, ANSWER: 3, AUTHORITY: 0, ADDITIONAL: 1</div><div class="line"></div><div class="line">;; OPT PSEUDOSECTION:</div><div class="line">; EDNS: version: 0, flags:; udp: 4000</div><div class="line">;; QUESTION SECTION:</div><div class="line">;wallez.cn.         IN  A</div><div class="line"></div><div class="line">;; ANSWER SECTION:</div><div class="line">wallez.cn.      657 IN  CNAME   walle.github.io.</div><div class="line">walle.github.io.    2418    IN  CNAME   sni.github.map.fastly.net.</div><div class="line">sni.github.map.fastly.net. 436  IN  A   151.101.73.147</div><div class="line"></div><div class="line">;; Query time: 61 msec</div><div class="line">;; SERVER: 10.20.250.17<span class="comment">#53(10.20.250.17)</span></div><div class="line">;; WHEN: Sat Oct 14 13:41:04 CST 2017</div><div class="line">;; MSG SIZE  rcvd: 122</div></pre></td></tr></table></figure><h3 id="2-4-nscd-DNS-本地缓存服务"><a href="#2-4-nscd-DNS-本地缓存服务" class="headerlink" title="2.4 nscd: DNS 本地缓存服务"></a>2.4 nscd: DNS 本地缓存服务</h3><p>安装 <code>nscd</code> 后，设置 <code>/etc/nscd.conf</code>文件以开启 DNS 缓存：<br><figure class="highlight bash"><table><tr><td class="code"><pre><div class="line"><span class="built_in">enable</span>-cache    hosts       yes</div></pre></td></tr></table></figure></p><p><code>nscd</code>的常用选项：</p><ul><li><code>-g</code>: 显示缓存统计信息</li><li><code>-f</code>: 指定配置文件</li><li><code>-i host</code>: 清空特定host的缓存</li><li><code>-K</code>: 关闭缓存服务</li></ul>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> dns </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>性能测试</title>
      <link href="/2017/05/28/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/"/>
      <url>/2017/05/28/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<h2 id="1-性能测试是什么？"><a href="#1-性能测试是什么？" class="headerlink" title="1. 性能测试是什么？"></a>1. 性能测试是什么？</h2><p>性能测试是一个严谨的工程项目，在一个系统开发完成后，在功能测试，安全测试等之外，必须进行性能测试。性能测试主要统一考虑这么几个因素：吞吐量、响应时间、资源利用（CPU/MEM/IO/Bandwidth），成功率、系统稳定性.</p><h3 id="1-1-并发数（cocurrency）"><a href="#1-1-并发数（cocurrency）" class="headerlink" title="1.1 并发数（cocurrency）"></a>1.1 并发数（cocurrency）</h3><p>系统同时处理的请求数</p><h3 id="1-2-响应时间（latency）"><a href="#1-2-响应时间（latency）" class="headerlink" title="1.2 响应时间（latency）"></a>1.2 响应时间（latency）</h3><p>请求从接受到成功处理返回的耗时</p><h3 id="1-3-吞吐量（QPS-TPS）"><a href="#1-3-吞吐量（QPS-TPS）" class="headerlink" title="1.3 吞吐量（QPS/TPS）"></a>1.3 吞吐量（QPS/TPS）</h3><p><code>吞吐量 = 并发数 / 响应时间</code><br>系统性能如果只看吞吐量，不看响应时间是没有意义的。当并发量上涨的时候，系统的响应时间波动会越来越大，响应时间也会越来越慢。所以 吞吐量 必须有 响应时间 来卡。比如：TP99 小于 100ms 时，系统可以承载的最大并发数是 1000 QPS。</p><a id="more"></a><h2 id="2-性能测试怎么做？"><a href="#2-性能测试怎么做？" class="headerlink" title="2. 性能测试怎么做？"></a>2. 性能测试怎么做？</h2><h3 id="2-1-定义系统响应时间、成功率"><a href="#2-1-定义系统响应时间、成功率" class="headerlink" title="2.1 定义系统响应时间、成功率"></a>2.1 定义系统响应时间、成功率</h3><p>建议是 <code>TP99</code>：<code>99.9%</code> 的响应时间必须在 1ms，平均响应时间在 1ms 以内，100% 请求成功。</p><h3 id="2-2-确定最高吞吐量"><a href="#2-2-确定最高吞吐量" class="headerlink" title="2.2 确定最高吞吐量"></a>2.2 确定最高吞吐量</h3><p>在第一步确定的响应时间限制下，不断测试，找到系统最高吞吐量。测试所用数据，需要尽量多种的尺寸数据，并可以混合。最好使用生产环境的数据。</p><h3 id="2-3-Soak-Test"><a href="#2-3-Soak-Test" class="headerlink" title="2.3 Soak Test"></a>2.3 Soak Test</h3><p>使用第二步测试得到的吞吐量连续若干天不间断压测系统，然后收集系统的 CPU、内存、硬盘/网络IO 等指标，查看系统是否稳定。假如CPU和内存使用都是平稳的，那这个值就是系统的吞吐量</p><h3 id="2-4-确定吞吐量的极限值"><a href="#2-4-确定吞吐量的极限值" class="headerlink" title="2.4 确定吞吐量的极限值"></a>2.4 确定吞吐量的极限值</h3><p>在成功率 100% 的情况下，（暂不考虑响应时间的长短，）系统能坚持 10 分钟的吞吐量</p><h3 id="2-5-Burst-Test"><a href="#2-5-Burst-Test" class="headerlink" title="2.5 Burst Test"></a>2.5 Burst Test</h3><p>用第二步得到的最高吞吐量执行 5 分钟，然后在用第四步得到的吞吐量极限值执行 1 分钟，再回到使用第二步得到的最高吞吐量执行 5 分钟，再到第四步的吞吐量极限值执行 1 分钟，如此往复一段时间（例如 2 天）。收集系统数据：CPU、内存、硬盘/网络IO 等，观察他们的曲线，以及相应的响应时间，确保系统是平稳的。</p><h3 id="2-6-低吞吐量-和-网络小包-测试"><a href="#2-6-低吞吐量-和-网络小包-测试" class="headerlink" title="2.6 低吞吐量 和 网络小包 测试"></a>2.6 低吞吐量 和 网络小包 测试</h3><p>在低吞吐量的时候，可能会导致latency上升，比如TCP_NODELAY的参数没有开启会导致latency上升，而网络小包会导致带宽用不满也会导致性能上不去，所以，性能测试还需要根据实际情况<strong>选择性测试</strong>这两个场景。</p><h2 id="3-Tips"><a href="#3-Tips" class="headerlink" title="3. Tips"></a>3. Tips</h2><p>建议使用上述 step 2 得到的吞吐量的 <code>66.7%</code> 作为系统的软报警线，<code>80%</code> 作为系统的硬报警线。极限值仅仅用来抗突发的 peak。<br>本文主要参考了 <a href="http://coolshell.cn/articles/17381.html" target="_blank" rel="external">性能测试应该怎么做？</a></p>]]></content>
      
      
      <categories>
          
          <category> 测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 测试 </tag>
            
            <tag> 性能测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS 安装 VIM8.0</title>
      <link href="/2015/05/30/CentOS%20%E5%AE%89%E8%A3%85%20VIM8.0/"/>
      <url>/2015/05/30/CentOS%20%E5%AE%89%E8%A3%85%20VIM8.0/</url>
      
        <content type="html"><![CDATA[<h2 id="1-安装终端字符处理库nucrses"><a href="#1-安装终端字符处理库nucrses" class="headerlink" title="1. 安装终端字符处理库nucrses"></a>1. 安装终端字符处理库nucrses</h2><figure class="highlight bash"><table><tr><td class="code"><pre><div class="line">yum install ncurses-devel -y</div></pre></td></tr></table></figure><h2 id="2-编译安装"><a href="#2-编译安装" class="headerlink" title="2. 编译安装"></a>2. 编译安装</h2><figure class="highlight bash"><table><tr><td class="code"><pre><div class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src/</div><div class="line">wget ftp://ftp.vim.org/pub/vim/unix/vim-8.0.tar.bz2</div><div class="line">tar -jzxf vim-8.0.tar.bz2</div><div class="line"><span class="built_in">cd</span> vim80/</div><div class="line">./configure --prefix=/usr/<span class="built_in">local</span>/vim8 --enable-multibyte --enable-pythoninterp=yes --with-python-config-dir=/usr/lib/python2.6/config</div><div class="line">make &amp;&amp; make install</div></pre></td></tr></table></figure><h2 id="3-添加符号链接"><a href="#3-添加符号链接" class="headerlink" title="3. 添加符号链接"></a>3. 添加符号链接</h2><figure class="highlight bash"><table><tr><td class="code"><pre><div class="line"><span class="built_in">cd</span> /usr/bin</div><div class="line">ln <span class="_">-s</span> /usr/<span class="built_in">local</span>/vim8/bin/vim ./vim8</div></pre></td></tr></table></figure><a id="more"></a><h2 id="4-测试安装是否成功"><a href="#4-测试安装是否成功" class="headerlink" title="4. 测试安装是否成功"></a>4. 测试安装是否成功</h2><figure class="highlight bash"><table><tr><td class="code"><pre><div class="line">vim8 test.cpp</div></pre></td></tr></table></figure><h2 id="5-常见问题"><a href="#5-常见问题" class="headerlink" title="5. 常见问题"></a>5. 常见问题</h2><ol><li><p><code>YouCompleteMe unavailable: requires Vim compiled with Python 2.x or Python 3.x support</code><br>解决方法：首先安装 python-devel，然后configure 时添加 python支持选项 <code>--enable-multibyte --enable-pythoninterp=yes --with-python-config-dir=/usr/lib/python2.6/config</code>（–with-python-config-dir 选项的值根据系统具体而定）</p></li><li><p><code>YouCompleteMe unavailable: no module named future</code><br>解决方法：进入<code>YouCompleteMe</code> 目录, 运行 <code>git submodule update --init --recursive</code></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> vim </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vim </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VIM配置 - 使用Vundle和GitHub</title>
      <link href="/2015/05/25/VIM%E9%85%8D%E7%BD%AE%20-%20%E4%BD%BF%E7%94%A8Vundle%E5%92%8CGitHub/"/>
      <url>/2015/05/25/VIM%E9%85%8D%E7%BD%AE%20-%20%E4%BD%BF%E7%94%A8Vundle%E5%92%8CGitHub/</url>
      
        <content type="html"><![CDATA[<h2 id="1-创建文件与目录"><a href="#1-创建文件与目录" class="headerlink" title="1. 创建文件与目录"></a>1. 创建文件与目录</h2><figure class="highlight bash"><table><tr><td class="code"><pre><div class="line"><span class="built_in">cd</span> ~</div><div class="line">mkdir .vim</div><div class="line"><span class="built_in">cd</span> ~/.vim</div><div class="line">mkdir bundle</div></pre></td></tr></table></figure><h2 id="2-安装vundle"><a href="#2-安装vundle" class="headerlink" title="2. 安装vundle"></a>2. 安装vundle</h2><figure class="highlight bash"><table><tr><td class="code"><pre><div class="line">git <span class="built_in">clone</span> https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim</div></pre></td></tr></table></figure><h2 id="3-编辑文件-vimrc"><a href="#3-编辑文件-vimrc" class="headerlink" title="3. 编辑文件 .vimrc"></a>3. 编辑文件 .vimrc</h2><figure class="highlight bash"><table><tr><td class="code"><pre><div class="line"><span class="built_in">source</span> ~/.vim/vundle_vimrc</div><div class="line"><span class="built_in">source</span> ~/.vim/basic_vimrc</div></pre></td></tr></table></figure><a id="more"></a><h2 id="4-编辑文件-vundle-vimrc"><a href="#4-编辑文件-vundle-vimrc" class="headerlink" title="4. 编辑文件 vundle_vimrc"></a>4. 编辑文件 vundle_vimrc</h2><figure class="highlight bash"><table><tr><td class="code"><pre><div class="line"><span class="built_in">set</span> nocompatible        <span class="string">" be iMproved, required</span></div><div class="line">filetype off            " required</div><div class="line"></div><div class="line"><span class="string">" 设置包括vundle和初始化相关的runtime path</span></div><div class="line">set rtp+=~/.vim/bundle/Vundle.vim</div><div class="line"></div><div class="line">call vundle#begin()</div><div class="line">" 另一种选择, 指定一个vundle安装插件的路径</div><div class="line"><span class="string">"call vundle#begin('~/some/path/here')</span></div><div class="line"></div><div class="line">" 让vundle管理插件版本,必须</div><div class="line">Plugin <span class="string">'VundleVim/Vundle.vim'</span></div><div class="line"></div><div class="line"><span class="string">" 以下范例用来支持不同格式的插件安装.</span></div><div class="line">" 请将安装插的命令放在vundle<span class="comment">#begin和vundle#end之间.</span></div><div class="line"></div><div class="line"><span class="string">" Github上的插件</span></div><div class="line">" 格式为 Plugin <span class="string">'用户名/插件仓库名'</span></div><div class="line"><span class="string">"Plugin 'tpope/vim-fugitive'</span></div><div class="line">Plugin 'scrooloose/nerdtree'    " 文档目录结构</div><div class="line">Plugin <span class="string">'Valloric/YouCompleteMe'</span>    <span class="string">" 自动补全</span></div><div class="line">Plugin 'bling/vim-airline'    " 状态栏</div><div class="line">Plugin <span class="string">'flazz/vim-colorschemes'</span> <span class="string">" 颜色主题</span></div><div class="line"></div><div class="line">" 来自 http://vim-scripts.org/vim/scripts.html 的插件</div><div class="line"><span class="string">" Plugin '插件名称' 实际上是 Plugin 'vim-scripts/插件仓库名' 只是此处的用户名可以省略</span></div><div class="line">"Plugin <span class="string">'L9'</span></div><div class="line"></div><div class="line"><span class="string">" 由Git支持但不再github上的插件仓库 Plugin 'git clone 后面的地址'</span></div><div class="line">"Plugin <span class="string">'git://git.wincent.com/command-t.git'</span></div><div class="line"></div><div class="line"><span class="string">" 本地的Git仓库(例如自己的插件) Plugin 'file:///+本地插件仓库绝对路径'</span></div><div class="line">"Plugin <span class="string">'file:///home/gmarik/path/to/plugin'</span></div><div class="line"></div><div class="line"><span class="string">" 插件在仓库的子目录中.</span></div><div class="line">" 正确指定路径用以设置runtimepath. 以下范例插件在sparkup/vim目录下</div><div class="line"><span class="string">"Plugin 'rstacruz/sparkup', &#123;'rtp': 'vim/'&#125;</span></div><div class="line"></div><div class="line">" 避免插件名冲突,例如L9已存在,则可以指定</div><div class="line"><span class="string">"Plugin 'user/L9', &#123;'name': 'newL9'&#125;</span></div><div class="line"></div><div class="line">" 你的所有插件需要在下面这行之前</div><div class="line">call vundle<span class="comment">#end()            " 必须</span></div><div class="line">filetype plugin indent on    <span class="string">" 必须 加载vim自带和插件相应的语法和文件类型相关脚本</span></div><div class="line">" 忽视插件改变缩进,可以使用以下替代:</div><div class="line"><span class="string">"filetype plugin on</span></div><div class="line">"</div><div class="line"><span class="string">" 简要帮助文档</span></div><div class="line">" :PluginList       - 列出所有已配置的插件</div><div class="line"><span class="string">" :PluginInstall    - 安装插件,追加 `!` 用以更新或使用 :PluginUpdate</span></div><div class="line">" :PluginSearch foo - 搜索 foo ; 追加 `!` 清除本地缓存</div><div class="line"><span class="string">" :PluginClean      - 清除未使用插件,需要确认; 追加 `!` 自动批准移除未使用插件</span></div><div class="line">"</div><div class="line"><span class="string">" 查阅 :h vundle 获取更多细节和wiki以及FAQ</span></div><div class="line">" 将你自己对非插件片段放在这行之后</div><div class="line"></div><div class="line"><span class="string">" 插件额外配置</span></div><div class="line">" YouCompleteMe插件设置</div><div class="line"><span class="string">" 跳转到方法/函数定义的快捷键</span></div><div class="line">nnoremap &lt;leader&gt;j :YcmCompleter GoToDefinitionElseDeclaration&lt;CR&gt;</div><div class="line">" 触发补全快捷键</div><div class="line"><span class="built_in">let</span> g:ycm_key_list_select_completion = [<span class="string">'&lt;TAB&gt;'</span>, <span class="string">'&lt;c-n&gt;'</span>, <span class="string">'&lt;Down&gt;'</span>]</div><div class="line"><span class="built_in">let</span> g:ycm_key_list_previous_completion = [<span class="string">'&lt;S-TAB&gt;'</span>, <span class="string">'&lt;c-p&gt;'</span>, <span class="string">'&lt;Up&gt;'</span>]</div><div class="line"><span class="built_in">let</span> g:ycm_auto_trigger = 1</div><div class="line"><span class="string">" 最小自动触发补全的字符大小设置为 3</span></div><div class="line">let g:ycm_min_num_of_chars_for_completion = 3</div><div class="line">" YCM的previw窗口比较恼人，还是关闭比较好</div><div class="line"><span class="built_in">set</span> completeopt-=preview</div><div class="line"></div><div class="line"><span class="string">" vim-airline插件设置</span></div><div class="line">let g:airline_powerline_fonts = 1</div></pre></td></tr></table></figure><h2 id="5-编辑文件-basic-vimrc"><a href="#5-编辑文件-basic-vimrc" class="headerlink" title="5. 编辑文件 basic_vimrc"></a>5. 编辑文件 basic_vimrc</h2><figure class="highlight bash"><table><tr><td class="code"><pre><div class="line"><span class="built_in">set</span> nocompatible</div><div class="line"></div><div class="line"><span class="string">" 主题</span></div><div class="line">colorscheme molokai</div><div class="line">let g:molokai_original = 1</div><div class="line"></div><div class="line">" 基础设置</div><div class="line"><span class="built_in">set</span> guifont=Monaco:h14          <span class="string">" 字体 &amp;&amp; 字号</span></div><div class="line">syntax on                       " 打开语法高亮</div><div class="line"><span class="built_in">set</span> number                      <span class="string">" 显示行号</span></div><div class="line">set autoindent                  " 设置缩进有三个取值 cindent (c风格)</div><div class="line">                                <span class="string">" smartindent (智能模式)、</span></div><div class="line">                                " autoindent (简单的与上一行保持一致)</div><div class="line"><span class="built_in">set</span> tabstop=4                   <span class="string">" 设置 tab 键的宽度</span></div><div class="line">set shiftwidth=4                " 换行时行间交错使用4个空格</div><div class="line"><span class="built_in">set</span> backspace=indent,eol,start  <span class="string">" 设置退格键可用</span></div><div class="line">                                " indent：如果用了 <span class="built_in">set</span> indent, <span class="built_in">set</span> ai 等自动缩进，想用退格键将字段缩进的删掉，必须设置这个选项，否则不响应。</div><div class="line">                                <span class="string">" eol：如果插入模式下在行开头，想通过退格键合并两行，需要设置eol。</span></div><div class="line">                                " start：要想删除此次插入前的输入，需设置这个。</div><div class="line"><span class="built_in">set</span> smarttab                    <span class="string">" 每次按 backspace 时删除4个空格</span></div><div class="line">set incsearch                   " 增量式搜索(遍搜索遍显示内容)</div><div class="line"><span class="built_in">set</span> hlsearch                    <span class="string">" 高亮搜索</span></div><div class="line">filetype on                     " 打开文件类型检测功能</div><div class="line">filetype plugin on              <span class="string">" 允许加载文件类型插件</span></div><div class="line">filetype indent on              " 允许为不同类型的文件定义不同的缩进格式</div><div class="line"><span class="built_in">set</span> showmatch                   <span class="string">" 显示括号配对情况</span></div><div class="line">"<span class="built_in">set</span> foldenable                 <span class="string">" 开启代码折叠</span></div><div class="line">"<span class="built_in">set</span> foldmethod=syntax          <span class="string">" 自动语法折叠</span></div><div class="line">set nobackup                    " 禁止生成备份</div><div class="line"><span class="built_in">set</span> noswapfile                  <span class="string">" 不产生 swp 文件</span></div><div class="line">set mouse=a                     " 启用鼠标</div><div class="line"><span class="built_in">set</span> nowrap                      <span class="string">" 设置不自动折行</span></div><div class="line">set cursorline                  " 突出显示当前行</div><div class="line"><span class="built_in">set</span> clipboard=unnamed           <span class="string">" 与 windows 共享剪贴板</span></div><div class="line">set cmdheight=1                 " 命令行（在状态行下）的高度，默认为1</div><div class="line"><span class="built_in">set</span> laststatus=2                <span class="string">" 开启状态栏信息</span></div><div class="line"></div><div class="line">" 设置窗口</div><div class="line"><span class="keyword">if</span> has(<span class="string">"gui_running"</span>)</div><div class="line">    <span class="string">" au GUIEnter * simalt ~x   "</span> 窗口启动时自动最大化</div><div class="line">    winpos 70 25                <span class="string">" 指定窗口出现的位置，坐标原点在屏幕左上角</span></div><div class="line">    set lines=55 columns=180    " 指定窗口大小，lines 为高度，columns 为宽度</div><div class="line">    <span class="built_in">set</span> guioptions+=c           <span class="string">" 使用字符提示框</span></div><div class="line">    set guioptions-=m           " 隐藏菜单栏</div><div class="line">    <span class="built_in">set</span> guioptions-=T           <span class="string">" 隐藏工具栏</span></div><div class="line">    set guioptions=L            " 隐藏左侧滚动条</div><div class="line">    <span class="built_in">set</span> guioptions=r            <span class="string">" 隐藏右侧滚动条</span></div><div class="line">    set guioptions-=b           " 隐藏底部滚动条</div><div class="line">    <span class="built_in">set</span> showtabline=0           <span class="string">" 隐藏 Tab 栏</span></div><div class="line">endif</div><div class="line"></div><div class="line">" 设置编码</div><div class="line"><span class="built_in">set</span> fenc=utf-8                              <span class="string">" 设置编码</span></div><div class="line">set encoding=utf-8                          " 内部的程序识别编码</div><div class="line"><span class="built_in">set</span> fileencoding=utf-8                      <span class="string">" 当前文件编辑时使用的文件编码</span></div><div class="line">set fileencodings=utf-8,gbk,cp936,latin-1   " gvim 打开文件是支持的编码</div><div class="line">language messages zh_CN.utf-8               <span class="string">" 解决 consle 输出乱码</span></div><div class="line">set ambiwidth=double                        " 防止特殊符号无法显示</div><div class="line"><span class="built_in">set</span> helplang=cn                             <span class="string">" 中文帮助</span></div></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> vim </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vim </tag>
            
            <tag> vundle </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>远程访问 Jupyter Notebook 配置</title>
      <link href="/2015/05/22/%E8%BF%9C%E7%A8%8B%E8%AE%BF%E9%97%AE%20Jupyter%20Notebook%20%E9%85%8D%E7%BD%AE/"/>
      <url>/2015/05/22/%E8%BF%9C%E7%A8%8B%E8%AE%BF%E9%97%AE%20Jupyter%20Notebook%20%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="1-安装anaconda"><a href="#1-安装anaconda" class="headerlink" title="1. 安装anaconda"></a>1. 安装anaconda</h2><p>wget下载，然后如下安装<br><code>./Anaconda-latest-Linux-x86_64.sh</code><br>默认安装目录为用户家目录下的anaconda2，如 <code>/home/jude/anaconda2</code>， 这个路径在安装时可以更改。<br>完成后，包括 jupyter notebook 在内的一系列 Python 科学计算工具就都安装好了。</p><h2 id="2-配置-Jupyter-notebook"><a href="#2-配置-Jupyter-notebook" class="headerlink" title="2. 配置 Jupyter-notebook"></a>2. 配置 Jupyter-notebook</h2><h3 id="2-1-生成jupyter配置文件"><a href="#2-1-生成jupyter配置文件" class="headerlink" title="2.1 生成jupyter配置文件"></a>2.1 生成jupyter配置文件</h3><p><code>jupyter notebook --generate-config</code><br>执行这个命令后，会在用户的Home目录中，生成 <code>~/.jupyter/jupyter_notebook_config.py</code> 文件。</p><a id="more"></a><h3 id="2-2-配置访问jupyter密码保护"><a href="#2-2-配置访问jupyter密码保护" class="headerlink" title="2.2 配置访问jupyter密码保护"></a>2.2 配置访问jupyter密码保护</h3><figure class="highlight bash"><table><tr><td class="code"><pre><div class="line">$ ipython</div><div class="line">Python 2.7.13 |Anaconda 4.3.1 (64-bit)| (default, Dec 20 2016, 23:09:15) </div><div class="line">Type <span class="string">"copyright"</span>, <span class="string">"credits"</span> or <span class="string">"license"</span> <span class="keyword">for</span> more information.</div><div class="line"></div><div class="line">IPython 5.1.0 -- An enhanced Interactive Python.</div><div class="line">?         -&gt; Introduction and overview of IPython<span class="string">'s features.</span></div><div class="line">%quickref -&gt; Quick reference.</div><div class="line">help      -&gt; Python's own <span class="built_in">help</span> system.</div><div class="line">object?   -&gt; Details about <span class="string">'object'</span>, use <span class="string">'object??'</span> <span class="keyword">for</span> extra details.</div><div class="line"></div><div class="line">In [1]: from notebook.auth import passwd</div><div class="line"></div><div class="line">In [2]: passwd()</div><div class="line">Enter password:    // 输入密码</div><div class="line">Verify password:   // 再次输入密码</div><div class="line">Out[2]: <span class="string">'sha1:28ebb93ec41b:96830638e989cde7191b..................'</span></div></pre></td></tr></table></figure><h3 id="2-3-修改jupyter配置文件"><a href="#2-3-修改jupyter配置文件" class="headerlink" title="2.3 修改jupyter配置文件"></a>2.3 修改jupyter配置文件</h3><p><code>vim ~/.jupyter/jupyter_notebook_config.py</code><br>主要修改如下几个参数：<br><figure class="highlight python"><table><tr><td class="code"><pre><div class="line">c.NotebookApp.base_url=<span class="string">'/jupyter/'</span></div><div class="line">c.NotebookApp.notebook_dir=<span class="string">'/data/jupyter-notebook'</span></div><div class="line">c.NotebookApp.ip=<span class="string">'*'</span></div><div class="line">c.NotebookApp.password = <span class="string">u'sha1:ce...'</span> <span class="comment">#粘贴 2.2 生成的密文'</span></div><div class="line">c.NotebookApp.open_browser = <span class="keyword">False</span></div><div class="line">c.NotebookApp.port =<span class="number">8888</span></div></pre></td></tr></table></figure></p><h3 id="2-4-启动jupyter"><a href="#2-4-启动jupyter" class="headerlink" title="2.4 启动jupyter"></a>2.4 启动jupyter</h3><p><code>jupyter notebook</code></p><h2 id="3-直接远程访问"><a href="#3-直接远程访问" class="headerlink" title="3. 直接远程访问"></a>3. 直接远程访问</h2><p>访问地址 <code>http://server-ip:8888</code>，输入2.2节配置的密码即可登录</p><h2 id="4-通过-Nginx-远程访问"><a href="#4-通过-Nginx-远程访问" class="headerlink" title="4. 通过 Nginx 远程访问"></a>4. 通过 Nginx 远程访问</h2><p>很多服务器由于防火墙或者网络环境的原因，不能通过上述的配置过程实现远程访问 jupyter-notebook，需要我们通过安装配置 Nginx 来实现。</p><h3 id="4-1-安装-Nginx"><a href="#4-1-安装-Nginx" class="headerlink" title="4.1 安装 Nginx"></a>4.1 安装 Nginx</h3><p><code>yum install nginx_x86.64</code></p><h3 id="4-2-配置-Nginx"><a href="#4-2-配置-Nginx" class="headerlink" title="4.2 配置 Nginx"></a>4.2 配置 Nginx</h3><p>在 <code>/etc/nginx/conf.d/</code> 目录下新建文件 <code>jupyter.conf</code><br>文件内容：<br><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">upstream jupyter &#123;</div><div class="line">    server localhost:8888;    #8888 对应 2.3 中 jupyter 配置的监听端口号</div><div class="line">&#125;</div><div class="line">server&#123;</div><div class="line">    listen 80;</div><div class="line">    server_name jupyter.ied.com;   #server_name 根据需要修改</div><div class="line">    location / &#123;</div><div class="line">            proxy_pass            http://jupyter;</div><div class="line">            proxy_set_header      Host $host;</div><div class="line">            # websocket support</div><div class="line">            proxy_http_version    1.1;</div><div class="line">            proxy_set_header      Upgrade &quot;websocket&quot;;</div><div class="line">            proxy_set_header      Connection &quot;Upgrade&quot;;</div><div class="line">            proxy_read_timeout    86400;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    location ~ /api/kernels/ &#123;</div><div class="line">            proxy_pass            http://jupyter;</div><div class="line">            proxy_set_header      Host $host;</div><div class="line">            # websocket support</div><div class="line">            proxy_http_version    1.1;</div><div class="line">            proxy_set_header      Upgrade &quot;websocket&quot;;</div><div class="line">            proxy_set_header      Connection &quot;Upgrade&quot;;</div><div class="line">            proxy_read_timeout    86400;</div><div class="line">        &#125;</div><div class="line">    location ~ /terminals/ &#123;</div><div class="line">            proxy_pass            http://jupyter;</div><div class="line">            proxy_set_header      Host $host;</div><div class="line">            # websocket support</div><div class="line">            proxy_http_version    1.1;</div><div class="line">            proxy_set_header      Upgrade &quot;websocket&quot;;</div><div class="line">            proxy_set_header      Connection &quot;Upgrade&quot;;</div><div class="line">            proxy_read_timeout    86400;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><h3 id="4-3-远程访问"><a href="#4-3-远程访问" class="headerlink" title="4.3 远程访问"></a>4.3 远程访问</h3><p>访问地址 <code>http://jupyter.ied.com/jupyter/</code>，输入2.2节配置的密码即可登录</p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jupyter </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo Introduction</title>
      <link href="/2015/05/20/Hexo%20Introduction/"/>
      <url>/2015/05/20/Hexo%20Introduction/</url>
      
        <content type="html"><![CDATA[<hr><p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p><a id="more"></a><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
